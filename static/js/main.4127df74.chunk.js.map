{"version":3,"sources":["components/Card/Card.js","components/App.js","serviceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","stylesRender","disabled","setState","color","itemName","cardFooter","mousesInfo","selectCard","state","selected","cardDescription","outOfCard","onHover","react_default","a","createElement","onMouseOut","onMouseOver","className","onClick","style","backgroundColor","weightInfo","borderColor","portionsInfo","Component","App","components_Card_Card","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4127df74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Card.css\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"#1597d9\",\n      selected: false,\n      cardFooter: \"\",\n      mousesInfo: \"\",\n      cardDescription: false\n    };\n  }\n\n  componentDidMount = () => {\n    this.stylesRender();\n  };\n\n  stylesRender = () => {\n    if (this.props.disabled) {\n      this.setState({\n        color: \"#b3b3b3\"\n      });\n    }\n\n    if (this.props.itemName === \"фуа-гра\") {\n      this.setState({\n        cardFooter: \"Печень утки разварная с артишоками.\"\n      });\n    } else if (this.props.itemName === \"рыбой\") {\n      this.setState({\n        cardFooter: \"Головы щучьи с чесноком да свежайшая сёмгушка.\"\n      });\n    } else if (this.props.itemName === \"курой\") {\n      this.setState({\n        cardFooter: \"Филе из цыплят с трюфелями в бульоне.\"\n      });\n    }\n\n    if (this.props.mousesInfo === \"1\") {\n      this.setState({ mousesInfo: \"мышь\" });\n    } else if (+this.props.mousesInfo > 4) {\n      this.setState({ mousesInfo: \"мышей\" });\n    } else {\n      this.setState({ mousesInfo: \"мыши\" });\n    }\n  };\n\n  selectCard = () => {\n    if (!this.props.disabled) {\n      if (this.state.color === \"#1597d9\" || this.state.color === \"#2ea8e6\") {\n        this.setState({\n          color: \"#d91567\",\n          selected: true,\n          cardDescription: false\n        });\n      } else {\n        this.setState({\n          color: \"#1597d9\",\n          selected: false\n        });\n      }\n    }\n  };\n\n  outOfCard = () => {\n    if (this.state.color === \"#d91567\") {\n      this.setState({\n        cardDescription: true\n      });\n    } else if (this.state.color === \"#2ea8e6\") {\n      this.setState({ color: \"#1597d9\" });\n    }\n  };\n\n  onHover = () => {\n    if (this.state.color === \"#1597d9\") {\n      this.setState({ color: \"#2ea8e6\" });\n    } else if (this.state.color === \"#d91567\") {\n      this.setState({\n        cardDescription: false\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div onMouseOut={this.outOfCard} onMouseOver={this.onHover}>\n        {this.props.disabled && <div className=\"disabled-card\" />}\n        <div onClick={this.selectCard}>\n        <div\n            className=\"card-weight-circle\"\n            style={{ backgroundColor: this.state.color }}\n          >\n            <h1>{this.props.weightInfo}</h1>\n            <h2>кг</h2>\n          </div>\n        <div\n          style={{ backgroundColor: this.state.color }}\n          className=\"top-left-border\"\n        >\n          {\" \"}\n        </div>\n        <div className=\"cat-photo\" />\n        <div\n          className=\"card-container\"\n          style={{ borderColor: this.state.color }}\n        >\n          {!this.state.cardDescription && (\n            <h3 className=\"card-description\">Сказочное заморское яство</h3>\n          )}\n          {this.state.cardDescription && (\n            <h3 className=\"new-card-description\">Котэ не одобряет?</h3>\n          )}\n          <h1 className=\"card-name\">Нямушка</h1>\n          <h2 className=\"item-name\">с {this.props.itemName}</h2>\n          <p className=\"card-info\">\n            <strong>{this.props.portionsInfo}</strong> порций\n          </p>\n          <p className=\"card-info\">\n            {this.props.mousesInfo !== \"1\" && (\n              <strong>{this.props.mousesInfo}</strong>\n            )}{\" \"}\n            {this.state.mousesInfo} в подарок\n          </p>\n\n        </div>\n        </div>\n        {!this.state.selected &&\n          !this.props.disabled && (\n            <p className=\"card-footer\">\n              {\" \"}\n              Чего сидишь? Порадуй котэ,{\" \"}\n              <span onClick={this.selectCard} className=\"buyButton\">\n                купи.\n              </span>{\" \"}\n            </p>\n          )}\n        {this.state.selected &&\n          !this.props.disabled && (\n            <p className=\"card-footer\">{this.state.cardFooter}</p>\n          )}\n        {this.props.disabled && (\n          <p className=\"disabled-card-footer\">\n            Печалька, с {this.props.itemName} закончился.\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Card from \"./Card/Card\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"shadow-back\"> </div>\n        <header>\n          {\" \"}\n          <h1> Ты сегодня покормил кота? </h1>\n        </header>\n        <div className=\"cards-container\">\n          <Card\n            itemName=\"фуа-гра\"\n            portionsInfo=\"10\"\n            mousesInfo=\"1\"\n            weightInfo=\"0,5\"\n          />\n          <Card\n            itemName=\"рыбой\"\n            portionsInfo=\"40\"\n            mousesInfo=\"2\"\n            weightInfo=\"2\"\n          />\n          <Card\n            itemName=\"курой\"\n            portionsInfo=\"100\"\n            mousesInfo=\"5\"\n            weightInfo=\"5\"\n            disabled\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}